@page
@using System.Text.Json
@model FleetDesignTaxi.Pages.IndexModel

<section class="row g-4 fade-in">
    <article class="col-12 col-xl-6">
        <div class="glass-card h-100">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div>
                    <h2 class="h5 text-white mb-1">Transaction Data</h2>
                    <p class="text-white-50 small mb-0">Live trip outcomes across all premium routes</p>
                </div>
                <span class="badge bg-azure">Updated 5 min ago</span>
            </div>
            <div class="table-glass">
                <table id="transactionsTable" class="table table-dark table-hover table-striped align-middle mb-0" aria-describedby="transactionsCaption">
                    <caption id="transactionsCaption" class="visually-hidden">Recent transaction performance</caption>
                    <thead>
                        <tr>
                            <th scope="col">Route</th>
                            <th scope="col" class="text-center">Trips</th>
                            <th scope="col" class="text-center">Completed</th>
                            <th scope="col" class="text-center">Cancelled</th>
                            <th scope="col" class="text-end">Revenue</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var record in Model.Transactions)
                        {
                            <tr>
                                <th scope="row" class="fw-semibold">@record.Route</th>
                                <td class="text-center">@record.Trips</td>
                                <td class="text-center">@record.Completed</td>
                                <td class="text-center">@record.Cancelled</td>
                                <td class="text-end">@record.Revenue.ToString("C0")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </article>
    <article class="col-12 col-xl-6">
        <div class="glass-card h-100">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div>
                    <h2 class="h5 text-white mb-1">News</h2>
                    <p class="text-white-50 small mb-0">Strategic announcements curated for operations leaders</p>
                </div>
                <a class="card-link link-muted" href="#">View all <i class="bi bi-chevron-right" aria-hidden="true"></i></a>
            </div>
            <div class="vstack gap-3">
                @foreach (var news in Model.News)
                {
                    <div class="p-3 rounded-4" style="background: rgba(255,255,255,0.04); border: 1px solid rgba(255,255,255,0.05);">
                        <div class="d-flex justify-content-between align-items-start">
                            <span class="badge rounded-pill" style="background: rgba(47,128,237,0.2); color: var(--color-azure);">@news.Category</span>
                            <small class="text-white-50">@news.PublishedOn.ToString("MMM dd")</small>
                        </div>
                        <h3 class="h6 text-white mt-2 mb-1">@news.Title</h3>
                        <p class="text-white-50 mb-2">@news.Summary</p>
                        <a class="card-link" href="@news.Link" target="_blank" rel="noopener">Read report <i class="bi bi-arrow-right" aria-hidden="true"></i></a>
                    </div>
                }
            </div>
        </div>
    </article>
    <article class="col-12 col-xl-6">
        <div class="glass-card h-100">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div>
                    <h2 class="h5 text-white mb-1">SMSs</h2>
                    <p class="text-white-50 small mb-0">Critical communications across the fleet ecosystem</p>
                </div>
                <div class="badge bg-emerald text-uppercase">Synced</div>
            </div>
            <div class="table-glass">
                <table id="smsTable" class="table table-dark table-hover table-striped align-middle mb-0" aria-describedby="smsCaption">
                    <caption id="smsCaption" class="visually-hidden">Recent SMS alerts</caption>
                    <thead>
                        <tr>
                            <th scope="col">Recipient</th>
                            <th scope="col">Category</th>
                            <th scope="col">Message</th>
                            <th scope="col">Status</th>
                            <th scope="col" class="text-end">Sent</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var sms in Model.SmsAlerts)
                        {
                            <tr>
                                <th scope="row" class="fw-semibold">@sms.Recipient</th>
                                <td>@sms.Category</td>
                                <td class="text-white-50">@sms.Message</td>
                                <td>@sms.Status</td>
                                <td class="text-end">@sms.SentAt.ToLocalTime().ToString("HH:mm")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </article>
    <article class="col-12 col-xl-6">
        <div class="glass-card h-100">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div>
                    <h2 class="h5 text-white mb-1">Revenue</h2>
                    <p class="text-white-50 small mb-0">Rolling 12-month net revenue trend</p>
                </div>
                <a class="card-link link-muted" href="#">Download CSV <i class="bi bi-download" aria-hidden="true"></i></a>
            </div>
            <div class="revenue-chart-container">
                <canvas id="revenueChart" role="img" aria-label="Revenue trend chart"></canvas>
            </div>
        </div>
    </article>
</section>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const transactionTable = document.getElementById('transactionsTable');
            if (transactionTable) {
                $(transactionTable).DataTable({
                    dom: 't',
                    paging: false,
                    searching: false,
                    info: false,
                    ordering: false
                });
            }

            const smsTable = document.getElementById('smsTable');
            if (smsTable) {
                $(smsTable).DataTable({
                    dom: 't',
                    paging: false,
                    searching: false,
                    info: false,
                    ordering: false
                });
            }

            const chartElement = document.getElementById('revenueChart');
            if (chartElement) {
                const context = chartElement.getContext('2d');
                const gradient = context.createLinearGradient(0, 0, 0, chartElement.offsetHeight || 320);
                gradient.addColorStop(0, 'rgba(47, 128, 237, 0.55)');
                gradient.addColorStop(1, 'rgba(39, 174, 96, 0.2)');

                const revenueData = @Html.Raw(JsonSerializer.Serialize(new
                {
                    labels = Model.RevenueSeries.Select(point => point.Date.ToString("MMM yyyy")),
                    data = Model.RevenueSeries.Select(point => point.Amount)
                }));

                new Chart(chartElement, {
                    type: 'line',
                    data: {
                        labels: revenueData.labels,
                        datasets: [{
                            label: 'Revenue',
                            data: revenueData.data,
                            fill: true,
                            backgroundColor: gradient,
                            borderColor: '#2F80ED',
                            borderWidth: 2,
                            pointBackgroundColor: '#27AE60',
                            pointBorderColor: '#0C1F2D',
                            pointRadius: 4,
                            tension: 0.35
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        interaction: { mode: 'index', intersect: false },
                        plugins: {
                            legend: {
                                labels: {
                                    color: '#ECF0F1',
                                    font: { family: 'Inter, sans-serif' }
                                }
                            },
                            tooltip: {
                                backgroundColor: 'rgba(12, 31, 45, 0.85)',
                                titleColor: '#ECF0F1',
                                bodyColor: '#ECF0F1',
                                borderColor: 'rgba(236, 240, 241, 0.15)',
                                borderWidth: 1,
                                displayColors: false,
                                callbacks: {
                                    label: function (context) {
                                        const value = context.parsed.y || 0;
                                        return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', maximumFractionDigits: 0 }).format(value);
                                    }
                                }
                            }
                        },
                        scales: {
                            x: {
                                grid: { color: 'rgba(255, 255, 255, 0.08)' },
                                ticks: { color: '#ECF0F1' }
                            },
                            y: {
                                grid: { color: 'rgba(255, 255, 255, 0.08)' },
                                ticks: {
                                    color: '#ECF0F1',
                                    callback: function (value) {
                                        return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', maximumFractionDigits: 0 }).format(value);
                                    }
                                }
                            }
                        },
                        animation: {
                            duration: 800,
                            easing: 'easeInOutQuad'
                        }
                    }
                });
            }
        });
    </script>
}
